@page "/"
@using SoftwareManager.Shared
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

<div class="container mx-auto align-content-center">
    <div class="flex flex-col w-1/3">
        <EditForm Model="@enteredVersion" OnValidSubmit="GetSoftware">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="flex flex-wrap -mx-3 mb-6">
                <div class="w-full px-3">
                    <label class="block tracking-wide text-xl text-left">
                        Please enter version:
                    </label>
                    <InputText class="block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-1 px-2 mb-3"
                               @bind-Value="enteredVersion.SoftwareVersion"
                               placeholder="2.1.0" />
                    @if (invalidVersion)
                    {
                        <p class="text-red-500 text-xs italic text-left mb-3">
                            Invalid version format. Please only include numbers and periods.
                        </p>
                    }
                    <button class="block shadow bg-primary hover:bg-teal-400 focus:shadow-outline focus:outline-none text-black font-bold py-2 px-4 rounded"
                            type="button"
                            @onclick="GetSoftware">
                        Submit
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
    @if (didSubmit)
    {
        <div class="flex flex-col w-1/2">
            @if (chosenSoftwareList == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Version</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var software in chosenSoftwareList)
                        {
                            <tr>
                                <td>@software.Name</td>
                                <td>@software.Version</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    }
</div>



@code {
    private bool didSubmit { get; set; } = false;
    private bool invalidVersion { get; set; } = false;
    private EnteredVersion enteredVersion = new EnteredVersion();
    private Software[] chosenSoftwareList;

    private async Task GetSoftware()
    {
        didSubmit = true;
        chosenSoftwareList = await Http.GetFromJsonAsync<Software[]>($"api/SoftwareManager/GetSoftware/{enteredVersion.SoftwareVersion}");
    }

    public class EnteredVersion
    {
        [Required]
        public string SoftwareVersion { get; set; }
    }
}